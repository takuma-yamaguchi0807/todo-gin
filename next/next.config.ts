import type { NextConfig } from 'next';

const nextConfig: NextConfig = {
  // =============================================================================
  // Next.js 設定ファイル
  // Docker コンテナでの実行に最適化
  // =============================================================================

  // -----------------------------------------------------------------------------
  // Docker 用の出力設定
  // -----------------------------------------------------------------------------
  // standalone: 実行に必要な全ファイルを .next/standalone に出力
  // これにより、node_modules を含まない軽量なコンテナイメージを作成可能
  output: 'standalone',

  // -----------------------------------------------------------------------------
  // 開発・本番共通設定
  // -----------------------------------------------------------------------------
  // 厳格モードを有効化（React の潜在的な問題を検出）
  reactStrictMode: true,

  // SWC（Speedy Web Compiler）は Next.js 15 ではデフォルト有効のため明示指定は不要

  // 実験的機能（必要に応じて有効化）
  experimental: {
    // Server Components の最適化
    // serverComponentsExternalPackages: [],
    // アプリケーションディレクトリの使用（Next.js 13+）
    // appDir: true, // 既に app ディレクトリを使用している場合は不要
  },

  // -----------------------------------------------------------------------------
  // 画像最適化設定
  // -----------------------------------------------------------------------------
  images: {
    // 外部画像ドメインを許可（必要に応じて追加）
    // domains: ['example.com'],

    // 画像の最適化形式
    formats: ['image/webp', 'image/avif'],
  },

  // -----------------------------------------------------------------------------
  // 環境変数設定
  // -----------------------------------------------------------------------------
  env: {
    // カスタム環境変数をここで定義可能
    // CUSTOM_KEY: process.env.CUSTOM_KEY,
  },

  // -----------------------------------------------------------------------------
  // ビルド設定
  // -----------------------------------------------------------------------------
  // TypeScript のエラーでビルドを停止するか
  typescript: {
    ignoreBuildErrors: false,
  },

  // ESLint のエラーでビルドを停止するか
  eslint: {
    ignoreDuringBuilds: false,
  },

  // -----------------------------------------------------------------------------
  // パフォーマンス最適化
  // -----------------------------------------------------------------------------
  // Webpack バンドルアナライザー（開発時のみ）
  // webpack: (config, { dev, isServer }) => {
  //   if (dev && !isServer) {
  //     config.plugins.push(new BundleAnalyzerPlugin());
  //   }
  //   return config;
  // },

  // -----------------------------------------------------------------------------
  // セキュリティヘッダー
  // -----------------------------------------------------------------------------
  async headers() {
    return [
      {
        source: '/(.*)',
        headers: [
          // XSS 攻撃を防ぐ
          {
            key: 'X-Content-Type-Options',
            value: 'nosniff',
          },
          // クリックジャッキング攻撃を防ぐ
          {
            key: 'X-Frame-Options',
            value: 'DENY',
          },
          // MIME タイプスニッフィングを防ぐ
          {
            key: 'X-Content-Type-Options',
            value: 'nosniff',
          },
        ],
      },
    ];
  },
};

export default nextConfig;
